{
    "name": "Appointment Setter Bot",
    "flow": [
        {
            "id": 1,
            "module": "gateway:CustomWebHook",
            "version": 1,
            "parameters": {
                "hook": 472545,
                "maxResults": 1
            },
            "mapper": {},
            "metadata": {
                "designer": {
                    "x": -1806,
                    "y": -140
                },
                "restore": {
                    "parameters": {
                        "hook": {
                            "data": {
                                "editable": "true"
                            },
                            "label": "Appointment Setter"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "hook",
                        "type": "hook:gateway-webhook",
                        "label": "Webhook",
                        "required": true
                    },
                    {
                        "name": "maxResults",
                        "type": "number",
                        "label": "Maximum number of results"
                    }
                ],
                "interface": [
                    {
                        "name": "message",
                        "spec": [
                            {
                                "name": "call",
                                "spec": [
                                    {
                                        "name": "assistant",
                                        "spec": [
                                            {
                                                "name": "firstMessage",
                                                "type": "text"
                                            },
                                            {
                                                "name": "model",
                                                "spec": [
                                                    {
                                                        "name": "functions",
                                                        "spec": {
                                                            "spec": [
                                                                {
                                                                    "name": "serverUrl",
                                                                    "type": "text"
                                                                },
                                                                {
                                                                    "name": "parameters",
                                                                    "spec": [
                                                                        {
                                                                            "name": "type",
                                                                            "type": "text"
                                                                        },
                                                                        {
                                                                            "name": "properties",
                                                                            "spec": [
                                                                                {
                                                                                    "name": "EventName",
                                                                                    "spec": [
                                                                                        {
                                                                                            "name": "type",
                                                                                            "type": "text"
                                                                                        },
                                                                                        {
                                                                                            "name": "description",
                                                                                            "type": "text"
                                                                                        }
                                                                                    ],
                                                                                    "type": "collection"
                                                                                }
                                                                            ],
                                                                            "type": "collection"
                                                                        }
                                                                    ],
                                                                    "type": "collection"
                                                                },
                                                                {
                                                                    "name": "description",
                                                                    "type": "text"
                                                                },
                                                                {
                                                                    "name": "async",
                                                                    "type": "boolean"
                                                                },
                                                                {
                                                                    "name": "name",
                                                                    "type": "text"
                                                                }
                                                            ],
                                                            "type": "collection"
                                                        },
                                                        "type": "array"
                                                    },
                                                    {
                                                        "name": "messages",
                                                        "spec": {
                                                            "spec": [
                                                                {
                                                                    "name": "content",
                                                                    "type": "text"
                                                                },
                                                                {
                                                                    "name": "role",
                                                                    "type": "text"
                                                                }
                                                            ],
                                                            "type": "collection"
                                                        },
                                                        "type": "array"
                                                    },
                                                    {
                                                        "name": "model",
                                                        "type": "text"
                                                    },
                                                    {
                                                        "name": "provider",
                                                        "type": "text"
                                                    },
                                                    {
                                                        "name": "temperature",
                                                        "type": "number"
                                                    }
                                                ],
                                                "type": "collection"
                                            },
                                            {
                                                "name": "name",
                                                "type": "text"
                                            },
                                            {
                                                "name": "voice",
                                                "spec": [
                                                    {
                                                        "name": "similarityBoost",
                                                        "type": "number"
                                                    },
                                                    {
                                                        "name": "stability",
                                                        "type": "number"
                                                    },
                                                    {
                                                        "name": "provider",
                                                        "type": "text"
                                                    },
                                                    {
                                                        "name": "voiceId",
                                                        "type": "text"
                                                    }
                                                ],
                                                "type": "collection"
                                            }
                                        ],
                                        "type": "collection"
                                    },
                                    {
                                        "name": "assistantId",
                                        "type": "text"
                                    },
                                    {
                                        "name": "cost",
                                        "type": "number"
                                    },
                                    {
                                        "name": "costBreakdown",
                                        "type": "text"
                                    },
                                    {
                                        "name": "createdAt",
                                        "type": "text"
                                    },
                                    {
                                        "name": "customer",
                                        "type": "text"
                                    },
                                    {
                                        "name": "customerId",
                                        "type": "text"
                                    },
                                    {
                                        "name": "endedAt",
                                        "type": "text"
                                    },
                                    {
                                        "name": "endedReason",
                                        "type": "text"
                                    },
                                    {
                                        "name": "forwardedPhoneNumber",
                                        "type": "text"
                                    },
                                    {
                                        "name": "id",
                                        "type": "text"
                                    },
                                    {
                                        "name": "maxDurationSeconds",
                                        "type": "text"
                                    },
                                    {
                                        "name": "messages",
                                        "type": "text"
                                    },
                                    {
                                        "name": "metadata",
                                        "type": "text"
                                    },
                                    {
                                        "name": "orgId",
                                        "type": "text"
                                    },
                                    {
                                        "name": "phoneCallProvider",
                                        "type": "text"
                                    },
                                    {
                                        "name": "phoneCallProviderBypassEnabled",
                                        "type": "text"
                                    },
                                    {
                                        "name": "phoneCallProviderDetails",
                                        "type": "text"
                                    },
                                    {
                                        "name": "phoneCallProviderId",
                                        "type": "text"
                                    },
                                    {
                                        "name": "phoneCallTransport",
                                        "type": "text"
                                    },
                                    {
                                        "name": "phoneNumber",
                                        "type": "text"
                                    },
                                    {
                                        "name": "phoneNumberId",
                                        "type": "text"
                                    },
                                    {
                                        "name": "recordingUrl",
                                        "type": "text"
                                    },
                                    {
                                        "name": "startedAt",
                                        "type": "text"
                                    },
                                    {
                                        "name": "status",
                                        "type": "text"
                                    },
                                    {
                                        "name": "stereoRecordingUrl",
                                        "type": "text"
                                    },
                                    {
                                        "name": "summary",
                                        "type": "text"
                                    },
                                    {
                                        "name": "transcript",
                                        "type": "text"
                                    },
                                    {
                                        "name": "twilioCallSid",
                                        "type": "text"
                                    },
                                    {
                                        "name": "twilioCallStatus",
                                        "type": "text"
                                    },
                                    {
                                        "name": "type",
                                        "type": "text"
                                    },
                                    {
                                        "name": "updatedAt",
                                        "type": "text"
                                    },
                                    {
                                        "name": "webCallSipUri",
                                        "type": "text"
                                    },
                                    {
                                        "name": "webCallUrl",
                                        "type": "text"
                                    }
                                ],
                                "type": "collection"
                            },
                            {
                                "name": "functionCall",
                                "spec": [
                                    {
                                        "name": "parameters",
                                        "spec": [
                                            {
                                                "name": "EventName",
                                                "type": "text"
                                            }
                                        ],
                                        "type": "collection"
                                    }
                                ],
                                "type": "collection"
                            },
                            {
                                "name": "type",
                                "type": "text"
                            }
                        ],
                        "type": "collection"
                    }
                ]
            }
        },
        {
            "id": 46,
            "module": "google-calendar:searchEvents",
            "version": 5,
            "parameters": {
                "__IMTCONN__": 643818
            },
            "mapper": {
                "q": "Free meeting",
                "limit": "4",
                "orderBy": "startTime",
                "timeMax": "{{addDays(now; 9)}}",
                "timeMin": "{{now}}",
                "calendar": "bruno.gomezm25@gmail.com",
                "updatedMin": "{{ignore}}",
                "singleEvents": true
            },
            "metadata": {
                "designer": {
                    "x": -1370,
                    "y": -122
                },
                "restore": {
                    "expect": {
                        "orderBy": {
                            "mode": "chose",
                            "label": "Start Time (ascending)"
                        },
                        "calendar": {
                            "mode": "chose",
                            "label": "bruno.gomezm25@gmail.com (Primary Calendar)"
                        },
                        "eventTypes": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "google"
                            },
                            "label": "My Google connection (bruno.gomezm25@gmail.com)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:google",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "calendar",
                        "type": "select",
                        "label": "Calendar ID",
                        "required": true
                    },
                    {
                        "name": "timeMin",
                        "time": true,
                        "type": "date",
                        "label": "Start Date"
                    },
                    {
                        "name": "timeMax",
                        "time": true,
                        "type": "date",
                        "label": "End Date"
                    },
                    {
                        "name": "updatedMin",
                        "time": true,
                        "type": "date",
                        "label": "Updated from"
                    },
                    {
                        "name": "singleEvents",
                        "type": "boolean",
                        "label": "Single Events",
                        "required": true
                    },
                    {
                        "name": "q",
                        "type": "text",
                        "label": "Query"
                    },
                    {
                        "name": "eventTypes",
                        "type": "select",
                        "label": "Event Types",
                        "multiple": true,
                        "validate": {
                            "enum": [
                                "default",
                                "focusTime",
                                "outOfOffice",
                                "workingLocation"
                            ]
                        }
                    },
                    {
                        "name": "orderBy",
                        "type": "select",
                        "label": "Order By",
                        "validate": {
                            "enum": [
                                "startTime",
                                "updated"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "type": "uinteger",
                        "label": "Limit"
                    }
                ]
            }
        },
        {
            "id": 27,
            "module": "json:AggregateToJSON",
            "version": 1,
            "parameters": {
                "type": 45342,
                "space": "tab",
                "feeder": 46
            },
            "mapper": {
                "Busy": "{{46.summary}}: {{46.start}}"
            },
            "metadata": {
                "designer": {
                    "x": -933,
                    "y": -139
                },
                "restore": {
                    "extra": {
                        "feeder": {
                            "label": "Google Calendar - Search Events [46]"
                        }
                    },
                    "parameters": {
                        "type": {
                            "label": "My data structure"
                        },
                        "space": {
                            "label": "1 tab"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "type": "udt",
                        "label": "Data structure",
                        "required": true
                    },
                    {
                        "name": "space",
                        "type": "select",
                        "label": "Indentation",
                        "validate": {
                            "enum": [
                                "tab",
                                "2",
                                "4"
                            ]
                        }
                    }
                ],
                "expect": [
                    {
                        "name": "Busy",
                        "type": "text",
                        "label": "Calendars"
                    }
                ],
                "advanced": true
            },
            "flags": {
                "groupBy": "{{46.summary}}: {{46.start}}"
            }
        },
        {
            "id": 40,
            "module": "util:TextAggregator",
            "version": 1,
            "parameters": {
                "feeder": 27,
                "rowSeparator": "\n"
            },
            "mapper": {
                "value": "{{27.`__IMTKEY__`}}"
            },
            "metadata": {
                "designer": {
                    "x": -599,
                    "y": -122
                },
                "restore": {
                    "extra": {
                        "feeder": {
                            "label": "JSON - Aggregate to JSON [27]"
                        }
                    },
                    "parameters": {
                        "rowSeparator": {
                            "label": "New row"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "rowSeparator",
                        "type": "select",
                        "label": "Row separator",
                        "validate": {
                            "enum": [
                                "\n",
                                "\t",
                                "other"
                            ]
                        }
                    }
                ],
                "expect": [
                    {
                        "name": "value",
                        "type": "text",
                        "label": "Text"
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 42,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 1369891
            },
            "mapper": {
                "model": "gpt-4-turbo-preview",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "assistant",
                        "content": "{{40.text}} \nThese are some dates that i want you to transform; first trasnform all times (adding 2 hours to all the times, and making them end on :00.) then into just the date (only month and day, both textual, in spanish) followed up by the time of the event, using ALWAYS the following format: if the time you read is 02:00 for example, then translate its textual form like this: three fourty eight AM (notice how i put each number with its text format, avoid translating zeroes unless they are in this exact position: XX:0X, if its XX:00 then avoid zeros in that specific case),  Only answer with the transformed data, dont add anything else to your response. "
                    }
                ],
                "max_tokens": "300",
                "temperature": "1",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": -268,
                    "y": -113
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "chose",
                            "label": "gpt-4-turbo-preview (system)"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "Assistant"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "My OpenAI connection"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens"
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 52,
            "module": "json:AggregateToJSON",
            "version": 1,
            "parameters": {
                "type": 45621,
                "space": "",
                "feeder": 42
            },
            "mapper": {
                "Events for Today": "{{42.result}}"
            },
            "metadata": {
                "designer": {
                    "x": 88,
                    "y": -97
                },
                "restore": {
                    "extra": {
                        "feeder": {
                            "label": "OpenAI (ChatGPT, Whisper, DALL-E) - Create a Completion (GPT-3, GPT-3.5, GPT-4) [42]"
                        }
                    },
                    "parameters": {
                        "type": {
                            "label": "Events for Today"
                        },
                        "space": {
                            "label": "Empty"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "type": "udt",
                        "label": "Data structure",
                        "required": true
                    },
                    {
                        "name": "space",
                        "type": "select",
                        "label": "Indentation",
                        "validate": {
                            "enum": [
                                "tab",
                                "2",
                                "4"
                            ]
                        }
                    }
                ],
                "expect": [
                    {
                        "name": "Events for Today",
                        "type": "text",
                        "label": null
                    }
                ]
            }
        },
        {
            "id": 56,
            "module": "builtin:BasicRouter",
            "version": 1,
            "mapper": null,
            "metadata": {
                "designer": {
                    "x": 445,
                    "y": -67
                }
            },
            "routes": [
                {
                    "flow": [
                        {
                            "id": 51,
                            "module": "gateway:WebhookRespond",
                            "version": 1,
                            "parameters": {},
                            "mapper": {
                                "body": "{{52.json}}",
                                "status": "200",
                                "headers": []
                            },
                            "metadata": {
                                "designer": {
                                    "x": 862,
                                    "y": -72
                                },
                                "restore": {
                                    "expect": {
                                        "headers": {
                                            "mode": "chose"
                                        }
                                    }
                                },
                                "expect": [
                                    {
                                        "name": "status",
                                        "type": "uinteger",
                                        "label": "Status",
                                        "required": true,
                                        "validate": {
                                            "min": 100
                                        }
                                    },
                                    {
                                        "name": "body",
                                        "type": "any",
                                        "label": "Body"
                                    },
                                    {
                                        "name": "headers",
                                        "spec": [
                                            {
                                                "name": "key",
                                                "type": "text",
                                                "label": "Key",
                                                "required": true,
                                                "validate": {
                                                    "max": 256
                                                }
                                            },
                                            {
                                                "name": "value",
                                                "type": "text",
                                                "label": "Value",
                                                "required": true,
                                                "validate": {
                                                    "max": 4096
                                                }
                                            }
                                        ],
                                        "type": "array",
                                        "label": "Custom headers",
                                        "validate": {
                                            "maxItems": 16
                                        }
                                    }
                                ],
                                "advanced": true
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "metadata": {
        "instant": true,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 3,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": false,
            "slots": null,
            "confidential": false,
            "dataloss": false,
            "dlq": false,
            "freshVariables": false
        },
        "designer": {
            "orphans": []
        },
        "zone": "eu2.make.com"
    }
}